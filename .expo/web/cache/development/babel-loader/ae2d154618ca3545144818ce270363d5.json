{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { Svg, G } from 'react-native-svg';\nimport SpeedometerContext from \"./context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Speedometer(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 250 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? width : _ref$height,\n      _ref$angle = _ref.angle,\n      angle = _ref$angle === void 0 ? 250 : _ref$angle,\n      _ref$rotation = _ref.rotation,\n      rotation = _ref$rotation === void 0 ? -angle / 2 : _ref$rotation,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 180 : _ref$max,\n      _ref$lineCap = _ref.lineCap,\n      lineCap = _ref$lineCap === void 0 ? 'butt' : _ref$lineCap,\n      _ref$accentColor = _ref.accentColor,\n      accentColor = _ref$accentColor === void 0 ? '#00e0ff' : _ref$accentColor,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? 'helvetica' : _ref$fontFamily,\n      children = _ref.children;\n  var radius = width / 2;\n  var currentFillAngle = useMemo(function () {\n    var clampValue = Math.min(max, Math.max(min, Number(value)));\n    return angle * (clampValue - min) / (max - min);\n  }, [min, max, value, angle]);\n  var contextValue = {\n    currentFillAngle: currentFillAngle,\n    radius: radius,\n    rotation: rotation,\n    min: min,\n    max: max,\n    angle: angle,\n    lineCap: lineCap,\n    accentColor: accentColor,\n    fontFamily: fontFamily,\n    value: value\n  };\n  return _jsx(SpeedometerContext.Provider, {\n    value: contextValue,\n    children: _jsx(Svg, {\n      width: width,\n      height: height,\n      children: _jsx(G, {\n        rotation: rotation,\n        originX: radius,\n        originY: radius,\n        children: children\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useMemo","Svg","G","SpeedometerContext","Speedometer","width","height","angle","rotation","value","min","max","lineCap","accentColor","fontFamily","children","radius","currentFillAngle","clampValue","Math","Number","contextValue"],"sources":["E:/intern/meter/node_modules/react-native-cool-speedometer/dist/Speedometer.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Svg, G } from 'react-native-svg';\nimport SpeedometerContext from './context';\nexport default function Speedometer({ width = 250, height = width, angle = 250, rotation = -angle / 2, value = 0, min = 0, max = 180, lineCap = 'butt', accentColor = '#00e0ff', fontFamily = 'helvetica', children, }) {\n    const radius = width / 2;\n    const currentFillAngle = useMemo(() => {\n        const clampValue = Math.min(max, Math.max(min, Number(value)));\n        return (angle * (clampValue - min)) / (max - min);\n    }, [min, max, value, angle]);\n    const contextValue = {\n        currentFillAngle,\n        radius,\n        rotation,\n        min,\n        max,\n        angle,\n        lineCap,\n        accentColor,\n        fontFamily,\n        value,\n    };\n    return (<SpeedometerContext.Provider value={contextValue}>\n      <Svg width={width} height={height}>\n        <G rotation={rotation} originX={radius} originY={radius}>\n          {children}\n        </G>\n      </Svg>\n    </SpeedometerContext.Provider>);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,CAAd,QAAuB,kBAAvB;AACA,OAAOC,kBAAP;;AACA,eAAe,SAASC,WAAT,OAAyM;EAAA,sBAAlLC,KAAkL;EAAA,IAAlLA,KAAkL,2BAA1K,GAA0K;EAAA,uBAArKC,MAAqK;EAAA,IAArKA,MAAqK,4BAA5JD,KAA4J;EAAA,sBAArJE,KAAqJ;EAAA,IAArJA,KAAqJ,2BAA7I,GAA6I;EAAA,yBAAxIC,QAAwI;EAAA,IAAxIA,QAAwI,8BAA7H,CAACD,KAAD,GAAS,CAAoH;EAAA,sBAAjHE,KAAiH;EAAA,IAAjHA,KAAiH,2BAAzG,CAAyG;EAAA,oBAAtGC,GAAsG;EAAA,IAAtGA,GAAsG,yBAAhG,CAAgG;EAAA,oBAA7FC,GAA6F;EAAA,IAA7FA,GAA6F,yBAAvF,GAAuF;EAAA,wBAAlFC,OAAkF;EAAA,IAAlFA,OAAkF,6BAAxE,MAAwE;EAAA,4BAAhEC,WAAgE;EAAA,IAAhEA,WAAgE,iCAAlD,SAAkD;EAAA,2BAAvCC,UAAuC;EAAA,IAAvCA,UAAuC,gCAA1B,WAA0B;EAAA,IAAbC,QAAa,QAAbA,QAAa;EACpN,IAAMC,MAAM,GAAGX,KAAK,GAAG,CAAvB;EACA,IAAMY,gBAAgB,GAAGjB,OAAO,CAAC,YAAM;IACnC,IAAMkB,UAAU,GAAGC,IAAI,CAACT,GAAL,CAASC,GAAT,EAAcQ,IAAI,CAACR,GAAL,CAASD,GAAT,EAAcU,MAAM,CAACX,KAAD,CAApB,CAAd,CAAnB;IACA,OAAQF,KAAK,IAAIW,UAAU,GAAGR,GAAjB,CAAN,IAAgCC,GAAG,GAAGD,GAAtC,CAAP;EACH,CAH+B,EAG7B,CAACA,GAAD,EAAMC,GAAN,EAAWF,KAAX,EAAkBF,KAAlB,CAH6B,CAAhC;EAIA,IAAMc,YAAY,GAAG;IACjBJ,gBAAgB,EAAhBA,gBADiB;IAEjBD,MAAM,EAANA,MAFiB;IAGjBR,QAAQ,EAARA,QAHiB;IAIjBE,GAAG,EAAHA,GAJiB;IAKjBC,GAAG,EAAHA,GALiB;IAMjBJ,KAAK,EAALA,KANiB;IAOjBK,OAAO,EAAPA,OAPiB;IAQjBC,WAAW,EAAXA,WARiB;IASjBC,UAAU,EAAVA,UATiB;IAUjBL,KAAK,EAALA;EAViB,CAArB;EAYA,OAAQ,KAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAEY,YAApC;IAAA,UACN,KAAC,GAAD;MAAK,KAAK,EAAEhB,KAAZ;MAAmB,MAAM,EAAEC,MAA3B;MAAA,UACE,KAAC,CAAD;QAAG,QAAQ,EAAEE,QAAb;QAAuB,OAAO,EAAEQ,MAAhC;QAAwC,OAAO,EAAEA,MAAjD;QAAA,UACGD;MADH;IADF;EADM,EAAR;AAOH"},"metadata":{},"sourceType":"module"}