{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar gases = ['So2', 'No2', 'H2'];\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(View, {\n      style: {\n        margin: 4\n      },\n      children: _jsx(Button, {\n        title: \"Gases\",\n        onPress: function onPress() {\n          return navigation.navigate('Gases');\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        margin: 4\n      },\n      children: _jsx(Button, {\n        title: \"VOCS\",\n        onPress: function onPress() {\n          return navigation.navigate('VOCS');\n        }\n      })\n    })]\n  });\n}\n\nfunction gas(_ref3) {\n  var navigation = _ref3.navigation,\n      title = _ref3.title;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"VOCS\"\n    })\n  });\n}\n\nfunction Gases(_ref4) {\n  var navigation = _ref4.navigation;\n  var BottomTab = createBottomTabNavigator();\n  var colorScheme = useColorScheme();\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Text, {\n        children: \"Gases\"\n      }), gases.map(function (gas) {\n        return _jsx(View, {\n          style: {\n            margin: 4,\n            width: 20\n          },\n          children: _jsx(Button, {\n            title: gas,\n            onPress: function onPress() {\n              return navigation.navigate('Gases');\n            }\n          })\n        });\n      })]\n    })\n  });\n}\n\nfunction VOCS(_ref5) {\n  var navigation = _ref5.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"VOCS\"\n    })\n  });\n}\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"VOCS\",\n      component: VOCS\n    }), _jsx(Stack.Screen, {\n      name: \"Gases\",\n      component: Gases\n    })]\n  });\n}","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","useColorScheme","LinkingConfiguration","gases","Navigation","colorScheme","Stack","HomeScreen","navigation","flex","alignItems","justifyContent","margin","navigate","gas","title","Gases","BottomTab","map","width","VOCS","RootNavigator"],"sources":["E:/intern/meter/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\nimport { Button, View, Text } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n\nconst gases=['So2','No2','H2'];\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <View style={{margin:4}}>\n      <Button\n        title=\"Gases\"\n        onPress={() => navigation.navigate('Gases')}\n      />\n      </View>\n      <View style={{margin:4}}>\n       <Button\n        title=\"VOCS\" \n        onPress={() => navigation.navigate('VOCS')}\n      />\n      </View>\n    </View>\n  );\n}\n\nfunction gas({navigation,title}){\n  return(\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>VOCS</Text>\n     \n    </View>\n  )\n}\n\nfunction Gases({ navigation }) {\n  const BottomTab = createBottomTabNavigator<RootTabParamList>();\n  const colorScheme = useColorScheme();\n  return (\n    <View>\n     \n    \n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Gases</Text>\n    {gases.map(gas=>(\n      \n      <View style={{margin:4 ,width:20}}>\n      <Button\n        title={gas}\n        onPress={() => navigation.navigate('Gases')}\n      />\n      </View>\n\n\n    ))}\n    </View>\n    </View>\n  );\n}\nfunction VOCS({ navigation }) {\n  return (\n\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>VOCS</Text>\n     \n    </View>\n  );\n}\n\n\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator >\n      \n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n      <Stack.Screen name=\"VOCS\" component={VOCS} />\n      <Stack.Screen name=\"Gases\" component={Gases} />\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}