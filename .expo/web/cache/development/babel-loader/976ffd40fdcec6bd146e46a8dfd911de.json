{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"opacity\", \"arcWidth\", \"lineCap\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext, useMemo } from 'react';\nimport { Path } from 'react-native-svg';\nimport Context from \"./context\";\nimport { getCirclePath } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Arc(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'black' : _ref$color,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,\n      _ref$arcWidth = _ref.arcWidth,\n      arcWidth = _ref$arcWidth === void 0 ? 4 : _ref$arcWidth,\n      lineCap = _ref.lineCap,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(Context),\n      radius = _useContext.radius,\n      globalLineCap = _useContext.lineCap,\n      angle = _useContext.angle;\n\n  var secondaryPath = useMemo(function () {\n    return getCirclePath(radius, radius, radius - arcWidth / 2, 0, angle);\n  }, [radius, arcWidth, angle]);\n  return _jsx(Path, _objectSpread({\n    d: secondaryPath,\n    stroke: color,\n    strokeOpacity: opacity,\n    strokeWidth: arcWidth,\n    strokeLinecap: lineCap || globalLineCap,\n    fill: \"transparent\"\n  }, rest));\n}","map":{"version":3,"names":["React","useContext","useMemo","Path","Context","getCirclePath","Arc","color","opacity","arcWidth","lineCap","rest","radius","globalLineCap","angle","secondaryPath"],"sources":["E:/intern/meter/node_modules/react-native-cool-speedometer/dist/Arc.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { Path } from 'react-native-svg';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function Arc({ color = 'black', opacity = 0.3, arcWidth = 4, lineCap, ...rest }) {\n    const { radius, lineCap: globalLineCap, angle, } = useContext(Context);\n    const secondaryPath = useMemo(() => getCirclePath(radius, radius, radius - arcWidth / 2, 0, angle), [radius, arcWidth, angle]);\n    return (<Path d={secondaryPath} stroke={color} strokeOpacity={opacity} strokeWidth={arcWidth} strokeLinecap={lineCap || globalLineCap} fill='transparent' {...rest}/>);\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP;AACA,SAASC,aAAT;;AACA,eAAe,SAASC,GAAT,OAAiF;EAAA,sBAAlEC,KAAkE;EAAA,IAAlEA,KAAkE,2BAA1D,OAA0D;EAAA,wBAAjDC,OAAiD;EAAA,IAAjDA,OAAiD,6BAAvC,GAAuC;EAAA,yBAAlCC,QAAkC;EAAA,IAAlCA,QAAkC,8BAAvB,CAAuB;EAAA,IAApBC,OAAoB,QAApBA,OAAoB;EAAA,IAARC,IAAQ;;EAC5F,kBAAmDV,UAAU,CAACG,OAAD,CAA7D;EAAA,IAAQQ,MAAR,eAAQA,MAAR;EAAA,IAAyBC,aAAzB,eAAgBH,OAAhB;EAAA,IAAwCI,KAAxC,eAAwCA,KAAxC;;EACA,IAAMC,aAAa,GAAGb,OAAO,CAAC;IAAA,OAAMG,aAAa,CAACO,MAAD,EAASA,MAAT,EAAiBA,MAAM,GAAGH,QAAQ,GAAG,CAArC,EAAwC,CAAxC,EAA2CK,KAA3C,CAAnB;EAAA,CAAD,EAAuE,CAACF,MAAD,EAASH,QAAT,EAAmBK,KAAnB,CAAvE,CAA7B;EACA,OAAQ,KAAC,IAAD;IAAM,CAAC,EAAEC,aAAT;IAAwB,MAAM,EAAER,KAAhC;IAAuC,aAAa,EAAEC,OAAtD;IAA+D,WAAW,EAAEC,QAA5E;IAAsF,aAAa,EAAEC,OAAO,IAAIG,aAAhH;IAA+H,IAAI,EAAC;EAApI,GAAsJF,IAAtJ,EAAR;AACH"},"metadata":{},"sourceType":"module"}