{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Details\",\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      }\n    })]\n  });\n}\n\nfunction DetailsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Details... again\",\n      onPress: function onPress() {\n        return navigation.push('Details');\n      }\n    })]\n  });\n}\n\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Details\",\n          component: DetailsScreen\n        })]\n      }), _jsxs(SafeAreaProvider, {\n        children: [_jsx(Navigation, {\n          colorScheme: colorScheme\n        }), _jsx(StatusBar, {})]\n      })]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","SafeAreaProvider","NavigationContainer","createNativeStackNavigator","useCachedResources","useColorScheme","Navigation","Stack","HomeScreen","navigation","flex","alignItems","justifyContent","navigate","DetailsScreen","push","App","isLoadingComplete","colorScheme"],"sources":["E:/intern/meter/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Button, View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nconst Stack = createNativeStackNavigator();\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate('Details')}\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Details Screen</Text>\n      <Button\n        title=\"Go to Details... again\"\n        onPress={() => navigation.push('Details')}\n      />\n    </View>\n  );\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      \n        <NavigationContainer>\n             <Stack.Navigator initialRouteName=\"Home\">\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        </Stack.Navigator>\n          <SafeAreaProvider>\n     \n    \n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n      </NavigationContainer>\n    );\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;;;AAEA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;;AAEA,SAASK,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;EAClC,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACE,KAAK,EAAC,eADR;MAEE,OAAO,EAAE;QAAA,OAAMH,UAAU,CAACI,QAAX,CAAoB,SAApB,CAAN;MAAA;IAFX,EAFF;EAAA,EADF;AASD;;AAED,SAASC,aAAT,QAAuC;EAAA,IAAdL,UAAc,SAAdA,UAAc;EACrC,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACE,KAAK,EAAC,wBADR;MAEE,OAAO,EAAE;QAAA,OAAMH,UAAU,CAACM,IAAX,CAAgB,SAAhB,CAAN;MAAA;IAFX,EAFF;EAAA,EADF;AASD;;AAED,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGb,kBAAkB,EAA5C;EACA,IAAMc,WAAW,GAAGb,cAAc,EAAlC;;EAEA,IAAI,CAACY,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAEI,MAAC,mBAAD;MAAA,WACK,MAAC,KAAD,CAAO,SAAP;QAAiB,gBAAgB,EAAC,MAAlC;QAAA,WACH,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAET;QAArC,EADG,EAEH,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAEM;QAAxC,EAFG;MAAA,EADL,EAKE,MAAC,gBAAD;QAAA,WAGF,KAAC,UAAD;UAAY,WAAW,EAAEI;QAAzB,EAHE,EAIF,KAAC,SAAD,KAJE;MAAA,EALF;IAAA,EAFJ;EAeD;AACF"},"metadata":{},"sourceType":"module"}