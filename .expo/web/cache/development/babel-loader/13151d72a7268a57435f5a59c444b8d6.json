{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"arcWidth\", \"lineCap\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext, useMemo } from 'react';\nimport { Path } from 'react-native-svg';\nimport Context from \"./context\";\nimport { getCirclePath } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Progress(_ref) {\n  var color = _ref.color,\n      _ref$arcWidth = _ref.arcWidth,\n      arcWidth = _ref$arcWidth === void 0 ? 5 : _ref$arcWidth,\n      lineCap = _ref.lineCap,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(Context),\n      accentColor = _useContext.accentColor,\n      radius = _useContext.radius,\n      globalLineCap = _useContext.lineCap,\n      currentFillAngle = _useContext.currentFillAngle;\n\n  var progressPath = useMemo(function () {\n    return getCirclePath(radius, radius, radius - arcWidth / 2, 0, currentFillAngle);\n  }, [radius, arcWidth, currentFillAngle]);\n  return _jsx(Path, _objectSpread({\n    d: progressPath,\n    stroke: color || accentColor,\n    strokeWidth: arcWidth,\n    strokeLinecap: lineCap || globalLineCap,\n    fill: \"transparent\"\n  }, rest));\n}","map":{"version":3,"names":["React","useContext","useMemo","Path","Context","getCirclePath","Progress","color","arcWidth","lineCap","rest","accentColor","radius","globalLineCap","currentFillAngle","progressPath"],"sources":["E:/intern/meter/node_modules/react-native-cool-speedometer/dist/Progress.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { Path } from 'react-native-svg';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function Progress({ color, arcWidth = 5, lineCap, ...rest }) {\n    const { accentColor, radius, lineCap: globalLineCap, currentFillAngle, } = useContext(Context);\n    const progressPath = useMemo(() => getCirclePath(radius, radius, radius - arcWidth / 2, 0, currentFillAngle), [radius, arcWidth, currentFillAngle]);\n    return (<Path d={progressPath} stroke={color || accentColor} strokeWidth={arcWidth} strokeLinecap={lineCap || globalLineCap} fill=\"transparent\" {...rest}/>);\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP;AACA,SAASC,aAAT;;AACA,eAAe,SAASC,QAAT,OAA6D;EAAA,IAAzCC,KAAyC,QAAzCA,KAAyC;EAAA,yBAAlCC,QAAkC;EAAA,IAAlCA,QAAkC,8BAAvB,CAAuB;EAAA,IAApBC,OAAoB,QAApBA,OAAoB;EAAA,IAARC,IAAQ;;EACxE,kBAA2ET,UAAU,CAACG,OAAD,CAArF;EAAA,IAAQO,WAAR,eAAQA,WAAR;EAAA,IAAqBC,MAArB,eAAqBA,MAArB;EAAA,IAAsCC,aAAtC,eAA6BJ,OAA7B;EAAA,IAAqDK,gBAArD,eAAqDA,gBAArD;;EACA,IAAMC,YAAY,GAAGb,OAAO,CAAC;IAAA,OAAMG,aAAa,CAACO,MAAD,EAASA,MAAT,EAAiBA,MAAM,GAAGJ,QAAQ,GAAG,CAArC,EAAwC,CAAxC,EAA2CM,gBAA3C,CAAnB;EAAA,CAAD,EAAkF,CAACF,MAAD,EAASJ,QAAT,EAAmBM,gBAAnB,CAAlF,CAA5B;EACA,OAAQ,KAAC,IAAD;IAAM,CAAC,EAAEC,YAAT;IAAuB,MAAM,EAAER,KAAK,IAAII,WAAxC;IAAqD,WAAW,EAAEH,QAAlE;IAA4E,aAAa,EAAEC,OAAO,IAAII,aAAtG;IAAqH,IAAI,EAAC;EAA1H,GAA4IH,IAA5I,EAAR;AACH"},"metadata":{},"sourceType":"module"}